#+TITLE: PA200 - Cloud Computing Concepts
#+AUTHOR: Petr Blaho
#+EMAIL: pblaho@redhat.com
#+REVEAL_HLEVEL: 3
#+REVEAL_THEME: solarized
#+OPTIONS: num:nil toc:nil
#+OPTIONS: reveal_single_file:t


* Virtualization

* Warm-up
#+ATTR_REVEAL: :frag (appear)
 - What is cloud computing?
 - Cloud traits?
 - Cloud deployment models?

* What is cloud computing?
#+ATTR_REVEAL: :frag (appear)
 1. Usage model of computer resources
 2. Networked computers
 3. Distributed computing technology
 4. A collection of heterogeneous computers

* Cloud traits?
#+ATTR_REVEAL: :frag (appear)
 1. High availability
 2. On-demand self-service
 3. High performance
 4. Broad network access
 5. Resource pooling
 6. Rapid elasticity
 7. Measured Service

* Cloud service models?
#+ATTR_REVEAL: :frag (appear)
 1. Software as a Service
 2. Application as a Service
 3. Platform as a Service
 4. Infrastructure as a Service
 5. Data as a Service

* Cloud deployment models
#+ATTR_REVEAL: :frag (appear)
 1. Public Cloud
 2. Private Cloud
 3. Hybrid Cloud
 4. Personal Cloud
 5. Community Cloud
 6. Enterprise Cloud

* History of virtualization
#+ATTR_REVEAL: :frag (appear)
 - How old is virtualization?

* History of virtualization
#+ATTR_REVEAL: :frag (appear)
 - Early 1960: batch processing
 - 1967: first time-sharing system - IBM S/370-67
 - 2005: Intel VT-x, AMD-V - new instruction set
 - 2005-: VMware, VirtualBox, KVM...

* What exactly is virtualization?
#+ATTR_REVEAL: :frag (appear)
 - Multi-programming vs multi-tasking
 - Multi-threading vs multi-tasking vs virtualization?
 - Containers vs OS virtualization
 - CPUs: Multi-core vs Hyper-threading

* How did virtualization work before 2005?
#+ATTR_REVEAL: :frag (appear)
 - Well, sloooowly...
 - Basing on 80386 CPU features

* Is it cloud already?
#+ATTR_REVEAL: :frag (appear)
 - What is virtualization?
 - What is cloud?

* Is it cloud already?
#+ATTR_REVEAL: :frag (appear)
 - Hypervisors
 - Virtualization management and services

* Hypervisors
#+ATTR_REVEAL: :frag (appear)
 - Native or bare-metal
 - Hosted

** Hypervisors
[[./hyperviseur.png]]

* Full or para-virtualization
#+ATTR_REVEAL: :frag (appear)
 - Full: unmodified OS on top of hypervisor
 - Para: modified OS calls hypervisor API

* Examples of native hypervisors
#+ATTR_REVEAL: :frag (appear)
 -  XEN
 -  MS Hyper-V
 -  VMware ESXi

* Examples of hosted hypervisors
#+ATTR_REVEAL: :frag (appear)
 - QEMU
 - KVM
 - VirtualBox
 - VMware Workstation
 - FreeBSD bhyve

* XEN
#+ATTR_REVEAL: :frag (appear)
 - founded in 2003 by XenSource, bought in 2007 by Citrix
 - 2013 under Linux Foundation as Xen Project
 - native hypervisor

* ZEN
[[./xen.png]]

* KVM
#+ATTR_REVEAL: :frag (appear)
 - Modular kernel virtualization
 - provides user space access to hw virtualization
 - started by Qumranet
 - 2007 merged into linux kernel

* KVM
[[./kvm.png]]

* QEMU
#+ATTR_REVEAL: :frag (appear)
 -  hosted hypervisor
 -  provides CPU and/or hardware emulation
 -  can be used with KVM (hardware-only emulation)

* QEMU
#+ATTR_REVEAL: :frag (appear)
 - Other practical QEMU use-cases?

* Type 1 vs type 2 confusion
#+ATTR_REVEAL: :frag (appear)
 - Linux with KVM
 - FreeBSD with bhyve

* Full vs para-virtualization
#+ATTR_REVEAL: :frag (appear)
 - Full: run unmodified OS image
 - Para: OS explicitly calls hypervisor

* Para-virtualization
#+ATTR_REVEAL: :frag (appear)
 - Why?

** Why is it called Hypervisor?
#+ATTR_REVEAL: :frag (appear)
 - What's behind the name?

* Virtualization management
#+ATTR_REVEAL: :frag (appear)
 - Common API to different hypervisors
 - High-level VM lifecycle abstraction
 - Cloud services: networks, storage...

* Cloud services
#+ATTR_REVEAL: :frag (appear)
 - OS image deployment
 - Centralized OS configuration
 - Automated network configuration
 - Instance backup/snapshot/migration
 - Centralized user authentication
 - Centralized storage
 - User interface

* Examples of virtualization software
#+ATTR_REVEAL: :frag (appear)
 - libvirt
 - oVirt
 - OpenStack

* Libvirt
#+ATTR_REVEAL: :frag (appear)
 - Common API for hypervisor type abstraction supports
 - LXC
 - KVM/QEMU, Xen, VirtualBox
 - VMware ESXi and Workstation
 - MS Hyper-V, IBM PowerVM

* Libvirt
[[./libvirt.png]]

* oVirt
#+ATTR_REVEAL: :frag (appear)
 - Virtualization management platform
 - On top of KVM
 - Upstream for RHV
 - Engine
 - Node
 - VDSM - virtual desktop and server manager

* OpenStack
#+ATTR_REVEAL: :frag (appear)
 - Software platform for cloud computing
 - Started in 2010 by Rackspace and NASA
 - In 2012 founded OpenStack Foundation

* OpenStack
[[./openstack.jpg]]

* OpenStack
[[./openstack-detailed.png]]

* Hypervisors vs Containers
#+ATTR_REVEAL: :frag (appear)
 - Hypervisors spawn VMs
 - Containers isolates apps to namespaces

* Example container software
#+ATTR_REVEAL: :frag (appear)
 - Docker
 - LXC
 - OpenVZ
 - chroot

* Cloud features
#+ATTR_REVEAL: :frag (appear)
 -  Easy provisioning and configuration
 -  Movable resource: snapshot/backup/live migration
 -  Consolidation of resources: scale up/down

** Cloud features
#+ATTR_REVEAL: :frag (appear)
 -  Isolation from host HW and OS
 -  Virtual vs Physical machine monitoring
 -  Easier testing and evaluation
 -  Duplication of environments

* Recap: the age of virtualization?
#+ATTR_REVEAL: :frag (appear)

 1. IBM 700/7000, since 1952
 2. CP-40 research project, early sixties
 3. IBM S/370-67, 1966
 4. Gameframes, since 2007
 5. Intel VT-x, AMD-V, since 2005

* Recap: virtualization technologies?
#+ATTR_REVEAL: :frag (appear)

 1. Multi-tasking
 2. Multi-threading processes
 3. Containers
 4. Hyper-threading CPU
 5. Multi-core CPU
 6. Intel VT-x, AMD-V
 7. Multi-programming

* Recap: hypervisor types?
#+ATTR_REVEAL: :frag (appear)

 1. Hybryd
 2. Bare-metal
 3. Native
 4. Hosted
 5. Para-hypervisor

* Recap: what makes up a cloud?
#+ATTR_REVEAL: :frag (appear)

 1. One hypervisor
 2. One or more hypervisors
 3. Baremetal computers
 4. Baremetal switches and routers
 5. Networking service

* Recap: virtualization vs containers?
#+ATTR_REVEAL: :frag (appear)

 1. We can run OS in a container
 2. We can run different OS'es in containers
 3. We can run VM in a container
 4. Containers are more secure than VM
 5. Containers consume less resources than VM
 6. We can run Windows app in Linux container

* Bonus question: matreshka cloud?
#+ATTR_REVEAL: :frag (appear)

 - Can you run a cloud in a cloud?
